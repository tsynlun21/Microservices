// <auto-generated />
using System;
using CarsShowroom.DataAccess.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarsShowroom.DataAccess.Migrations
{
    [DbContext(typeof(ShowroomDbContext))]
    partial class ShowroomDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarsShowroom.DataAccess.ContextEntities.ExtraItemEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("ReceiptEntityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ShowroomEntityId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<long>("VehicleModelEntityKey")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptEntityId");

                    b.HasIndex("ShowroomEntityId");

                    b.HasIndex("VehicleModelEntityKey");

                    b.ToTable("ExtraItems");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Count = 10,
                            Name = "Harman Kardon audio system",
                            Type = 1,
                            VehicleModelEntityKey = 1L
                        },
                        new
                        {
                            Id = 4L,
                            Count = 10,
                            Name = "Power Wilkins Audio system",
                            Type = 1,
                            VehicleModelEntityKey = 2L
                        },
                        new
                        {
                            Id = 5L,
                            Count = 3,
                            Name = "19R Alpine wheels",
                            Type = 2,
                            VehicleModelEntityKey = 2L
                        },
                        new
                        {
                            Id = 6L,
                            Count = 3,
                            Name = "AMG kit",
                            Type = 2,
                            VehicleModelEntityKey = 3L
                        },
                        new
                        {
                            Id = 7L,
                            Count = 3,
                            Name = "Ceramic breaks system",
                            Type = 2,
                            VehicleModelEntityKey = 4L
                        },
                        new
                        {
                            Id = 2L,
                            Count = 10,
                            Name = "Lip spoiler",
                            Type = 2,
                            VehicleModelEntityKey = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Count = 10,
                            Name = "LED lights",
                            Type = 1,
                            VehicleModelEntityKey = 1L
                        });
                });

            modelBuilder.Entity("CarsShowroom.DataAccess.ContextEntities.ReceiptEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("ShoowRoomEntityKey")
                        .HasColumnType("integer");

                    b.Property<long>("ShowroomEntityKey")
                        .HasColumnType("bigint");

                    b.Property<int>("TotalItems")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ShowroomEntityKey");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("CarsShowroom.DataAccess.ContextEntities.ShowroomEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Showrooms");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "Ростов-на-Дону, ул. Еременко 28, 'BMW Motors'",
                            ContactNumber = "79959303330"
                        },
                        new
                        {
                            Id = 2L,
                            Address = "Ростов-на-Дону, ул. Шаболдаева 105, 'Mercedes-Benz club'",
                            ContactNumber = "79959303331"
                        });
                });

            modelBuilder.Entity("CarsShowroom.DataAccess.ContextEntities.VehicleEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Color")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<long?>("ReceiptEntityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("ShowroomEntityKey")
                        .HasColumnType("bigint");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("VehicleModelId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptEntityId");

                    b.HasIndex("ShowroomEntityKey");

                    b.HasIndex("VehicleModelId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Brand = "BMW",
                            Color = 4,
                            Price = 3000000m,
                            ReleaseDate = new DateTime(2023, 3, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            ShowroomEntityKey = 1L,
                            Uid = "23D34EC8-F83F-4BED-95D6-05BDE4F76222",
                            VehicleModelId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Brand = "BMW",
                            Color = 3,
                            Price = 3200000m,
                            ReleaseDate = new DateTime(2023, 3, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            ShowroomEntityKey = 1L,
                            Uid = "6786D736-1C1D-4375-8A35-6594E5133823",
                            VehicleModelId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Brand = "BMW",
                            Color = 3,
                            Price = 10200000m,
                            ReleaseDate = new DateTime(2023, 3, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            ShowroomEntityKey = 1L,
                            Uid = "8E10D3F9-FE4A-4023-9E44-505249AE95C5",
                            VehicleModelId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            Brand = "Mercedes-Benz",
                            Color = 1,
                            Price = 3200000m,
                            ReleaseDate = new DateTime(2023, 3, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            ShowroomEntityKey = 2L,
                            Uid = "80070953-A133-41C2-AD49-BD51C30FC7AE",
                            VehicleModelId = 3L
                        },
                        new
                        {
                            Id = 5L,
                            Brand = "Mercedes-Benz",
                            Color = 5,
                            Price = 9450000m,
                            ReleaseDate = new DateTime(2023, 3, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            ShowroomEntityKey = 2L,
                            Uid = "BCC89D79-35D9-4AC2-8597-A837DED42699",
                            VehicleModelId = 4L
                        });
                });

            modelBuilder.Entity("CarsShowroom.DataAccess.ContextEntities.VehicleModelEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("VehicleModels");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Model = "BMW 325"
                        },
                        new
                        {
                            Id = 2L,
                            Model = "BMW M5 F90"
                        },
                        new
                        {
                            Id = 3L,
                            Model = "Mercedes-Benz E200"
                        },
                        new
                        {
                            Id = 4L,
                            Model = "Mercedes-Benz CLS63 AMG"
                        });
                });

            modelBuilder.Entity("CarsShowroom.DataAccess.ContextEntities.ExtraItemEntity", b =>
                {
                    b.HasOne("CarsShowroom.DataAccess.ContextEntities.ReceiptEntity", null)
                        .WithMany("ExtraItems")
                        .HasForeignKey("ReceiptEntityId");

                    b.HasOne("CarsShowroom.DataAccess.ContextEntities.ShowroomEntity", null)
                        .WithMany("ExtraItems")
                        .HasForeignKey("ShowroomEntityId");

                    b.HasOne("CarsShowroom.DataAccess.ContextEntities.VehicleModelEntity", "VehicleModelEntity")
                        .WithMany("ExtraItems")
                        .HasForeignKey("VehicleModelEntityKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleModelEntity");
                });

            modelBuilder.Entity("CarsShowroom.DataAccess.ContextEntities.ReceiptEntity", b =>
                {
                    b.HasOne("CarsShowroom.DataAccess.ContextEntities.ShowroomEntity", "Showroom")
                        .WithMany("Receipts")
                        .HasForeignKey("ShowroomEntityKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Showroom");
                });

            modelBuilder.Entity("CarsShowroom.DataAccess.ContextEntities.VehicleEntity", b =>
                {
                    b.HasOne("CarsShowroom.DataAccess.ContextEntities.ReceiptEntity", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("ReceiptEntityId");

                    b.HasOne("CarsShowroom.DataAccess.ContextEntities.ShowroomEntity", "Showroom")
                        .WithMany("Vehicles")
                        .HasForeignKey("ShowroomEntityKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarsShowroom.DataAccess.ContextEntities.VehicleModelEntity", "VehicleModelEntity")
                        .WithMany()
                        .HasForeignKey("VehicleModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Showroom");

                    b.Navigation("VehicleModelEntity");
                });

            modelBuilder.Entity("CarsShowroom.DataAccess.ContextEntities.ReceiptEntity", b =>
                {
                    b.Navigation("ExtraItems");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("CarsShowroom.DataAccess.ContextEntities.ShowroomEntity", b =>
                {
                    b.Navigation("ExtraItems");

                    b.Navigation("Receipts");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("CarsShowroom.DataAccess.ContextEntities.VehicleModelEntity", b =>
                {
                    b.Navigation("ExtraItems");
                });
#pragma warning restore 612, 618
        }
    }
}
